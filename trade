-- LocalScript - Place inside StarterPlayer > StarterPlayerScripts or StarterGui

local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for PlayerGui
local playerGui = player:WaitForChild("PlayerGui")

-- Variables
local tradePartnerUsername = nil
local isMonitoring = false
local frozenClone = nil

-- Function to extract username from the title text
local function extractUsername(text)
	local username = text:match("%((.-)%)")
	return username
end

-- Function to keep the frozen GUI alive
local function maintainFrozenGui()
	if frozenClone and frozenClone.Parent then
		task.wait(11)
		if frozenClone and frozenClone.Parent then
			frozenClone:Destroy()
			print("Cloned Trading GUI destroyed!")
		end
	end
end

-- Setup monitoring for the trading GUI
local function setupMonitoring()
	local menusFolder = playerGui:WaitForChild("Menus")
	local tradingGui = menusFolder:WaitForChild("Trading")
	local header = tradingGui:WaitForChild("Header")
	local titleLabel = header:WaitForChild("Title")
	
	-- Monitor when trading GUI becomes visible
	tradingGui:GetPropertyChangedSignal("Visible"):Connect(function()
		if tradingGui.Visible then
			-- Trade started, extract partner username
			tradePartnerUsername = extractUsername(titleLabel.Text)
			isMonitoring = true
			print("Trading started with:", tradePartnerUsername)
		else
			-- Trade ended normally (not from player leaving)
			if isMonitoring and not frozenClone then
				isMonitoring = false
				tradePartnerUsername = nil
			end
		end
	end)
	
	-- Monitor title changes
	titleLabel:GetPropertyChangedSignal("Text"):Connect(function()
		if tradingGui.Visible then
			tradePartnerUsername = extractUsername(titleLabel.Text)
		end
	end)
	
	-- Monitor players leaving
	Players.PlayerRemoving:Connect(function(leavingPlayer)
		if isMonitoring and tradePartnerUsername and leavingPlayer.Name == tradePartnerUsername then
			print("Trade partner left! Creating frozen GUI...")
			
			-- Immediately clone whatever state the GUI is in
			if tradingGui.Parent then
				frozenClone = tradingGui:Clone()
				
				-- Force it to be visible
				frozenClone.Visible = true
				
				-- Disable all interactive elements
				for _, descendant in pairs(frozenClone:GetDescendants()) do
					if descendant:IsA("GuiButton") or descendant:IsA("TextButton") or descendant:IsA("ImageButton") then
						descendant.Active = false
					end
				end
				
				-- Update title to show player left
				local clonedHeader = frozenClone:FindFirstChild("Header")
				if clonedHeader then
					local clonedTitle = clonedHeader:FindFirstChild("Title")
					if clonedTitle and clonedTitle:IsA("TextLabel") then
						clonedTitle.Text = clonedTitle.Text .. " (Left)"
					end
				end
				
				-- Parent it directly to PlayerGui at the root level
				frozenClone.Name = "FrozenTradingGUI"
				frozenClone.Parent = playerGui
				
				print("Frozen GUI created and parented to PlayerGui!")
				
				-- Start the countdown to destroy it
				task.spawn(maintainFrozenGui)
			end
			
			isMonitoring = false
			tradePartnerUsername = nil
		end
	end)
	
	print("Trade monitoring active!")
end

-- Start monitoring
local success, err = pcall(setupMonitoring)
if not success then
	warn("Failed to setup monitoring:", err)
end
