-- ✅ GUI Setup
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local buttons = {}

ScreenGui.Name = "HorseGui"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

Frame.Name = "Main"
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(10, 245, 65)
Frame.Size = UDim2.new(0, 250, 0, 300)
Frame.Position = UDim2.new(0, 50, 0, 50)
Frame.BorderSizePixel = 0

local islandNames = {
	"Jungle Island",
	"Lunar Islands",
	"Volcano Island",
	
}

for i, name in ipairs(islandNames) do
	local btn = Instance.new("TextButton")
	btn.Name = "bu" .. i
	btn.Parent = Frame
	btn.BackgroundColor3 = Color3.fromRGB(68, 183, 194)
	btn.BorderSizePixel = 0
	btn.Size = UDim2.new(1, -10, 0, 25)
	btn.Position = UDim2.new(0, 5, 0, (i - 1) * 30 + 5)
	btn.Font = Enum.Font.SourceSans
	btn.Text = name
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.TextSize = 18
	buttons["bu" .. i] = btn
end

-- ✅ Follow Logic
local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- ✅ Folder References
local folders = {
	workspace.Islands["Jungle Island"],
	workspace.Islands["Lunar Islands"],
	workspace.Islands["Volcano Island"],

}

-- ✅ Button Activation
for i = 1, 9 do
	local btn = buttons["bu" .. i]
	local folder = folders[i]
	if btn and folder then
		btn.MouseButton1Click:Connect(function()
			followLoopFrom(folder)
		end)
	end
end

workspace.Islands["Volcano Island"].LavaParts:Destroy()
