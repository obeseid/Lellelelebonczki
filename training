local function teleportLoop()
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:WaitForChild("Humanoid")

	local checkpointsFolder = workspace:WaitForChild("Islands")
		:WaitForChild("Training Island")
		:WaitForChild("Outdoor Arena")
		:WaitForChild("DynamicArena")
		:WaitForChild("_LAYOUT")
		:WaitForChild("CheckpointActivity")
		:WaitForChild("Routes")
		:WaitForChild("Checkpoints")

	local checkpointNames = {"1", "2", "3", "4"}

	while teleporting do
		for _, name in ipairs(checkpointNames) do
			if not teleporting then return end
			local checkpoint = checkpointsFolder:FindFirstChild(name)
			if checkpoint and checkpoint:IsA("BasePart") then
				
				-- Detect if player is mounted or seated
				local seatPart = humanoid.SeatPart
				if seatPart and seatPart:IsDescendantOf(workspace) then
					-- Teleport the whole horse or vehicle
					local mountModel = seatPart:FindFirstAncestorWhichIsA("Model")
					if mountModel and mountModel:FindFirstChild("PrimaryPart") then
						mountModel:SetPrimaryPartCFrame(checkpoint.CFrame)
					else
						seatPart.CFrame = checkpoint.CFrame
					end
				else
					-- Teleport normal player
					hrp.CFrame = checkpoint.CFrame
				end
			else
				warn("Checkpoint named "..name.." not found or is not a part")
			end
			task.wait(2)
		end
	end
end
