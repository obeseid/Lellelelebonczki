-- TabGUI - Complete Lua Recreation from .rbxmx
-- This script recreates the exact GUI structure with all properties and scripts

-- Create the main ScreenGui
local TabGUI = Instance.new("ScreenGui")
TabGUI.Name = "TabGUI"
TabGUI.AutoLocalize = true
TabGUI.ClipToDeviceSafeArea = true
TabGUI.DisplayOrder = 0
TabGUI.Enabled = true
TabGUI.ResetOnSpawn = true
TabGUI.SafeAreaCompatibility = Enum.SafeAreaCompatibility.InsetObscuresNoBar
TabGUI.ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
TabGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
TabGUI.Parent = game.Players.LocalPlayer.PlayerGui

-- Create the main Pages frame
local Pages = Instance.new("Frame")
Pages.Name = "Pages"
Pages.Active = false
Pages.AnchorPoint = Vector2.new(0, 0)
Pages.AutomaticSize = Enum.AutomaticSize.None
Pages.BackgroundColor3 = Color3.new(0.309803933, 0.905882359, 0.145098045)
Pages.BackgroundTransparency = 0
Pages.BorderColor3 = Color3.new(0.580392182, 0.964705884, 1)
Pages.BorderMode = Enum.BorderMode.Outline
Pages.BorderSizePixel = 3
Pages.ClipsDescendants = false
Pages.Draggable = false
Pages.Interactable = true
Pages.LayoutOrder = 0
Pages.Position = UDim2.new(0.0910311192, 0, 0.12475998, 0)
Pages.Rotation = 0
Pages.Selectable = false
Pages.Size = UDim2.new(0, 446, 0, 222)
Pages.SizeConstraint = Enum.SizeConstraint.RelativeXY
Pages.Visible = true
Pages.ZIndex = 1
Pages.Parent = TabGUI

-- Create Page2 frame
local Page2 = Instance.new("Frame")
Page2.Name = "Page2"
Page2.Active = false
Page2.AnchorPoint = Vector2.new(0, 0)
Page2.AutomaticSize = Enum.AutomaticSize.None
Page2.BackgroundColor3 = Color3.new(0.309803933, 0.905882359, 0.145098045)
Page2.BackgroundTransparency = 0
Page2.BorderColor3 = Color3.new(0.580392182, 0.964705884, 1)
Page2.BorderMode = Enum.BorderMode.Outline
Page2.BorderSizePixel = 3
Page2.ClipsDescendants = false
Page2.Draggable = false
Page2.Interactable = true
Page2.LayoutOrder = 0
Page2.Position = UDim2.new(-0.002370039, 0, -0.00461440906, 0)
Page2.Rotation = 0
Page2.Selectable = false
Page2.Size = UDim2.new(0, 446, 0, 222)
Page2.SizeConstraint = Enum.SizeConstraint.RelativeXY
Page2.Visible = false -- Page2 starts hidden
Page2.ZIndex = 1
Page2.Parent = Pages

-- Create mi1 button (Remove lava)
local mi1 = Instance.new("TextButton")
mi1.Name = "mi1"
mi1.Active = true
mi1.AnchorPoint = Vector2.new(0, 0)
mi1.AutoButtonColor = true
mi1.AutomaticSize = Enum.AutomaticSize.None
mi1.BackgroundColor3 = Color3.new(0.623529434, 0.905882359, 0.898039222)
mi1.BackgroundTransparency = 0
mi1.BorderColor3 = Color3.new(0, 0, 0)
mi1.BorderMode = Enum.BorderMode.Outline
mi1.BorderSizePixel = 3
mi1.ClipsDescendants = false
mi1.Draggable = false
mi1.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
mi1.Interactable = true
mi1.LayoutOrder = 0
mi1.LineHeight = 1
mi1.MaxVisibleGraphemes = -1
mi1.Modal = false
mi1.Position = UDim2.new(0.0695067272, 0, 0.252252251, 0)
mi1.RichText = false
mi1.Rotation = 0
mi1.Selectable = true
mi1.Selected = false
mi1.Size = UDim2.new(0, 130, 0, 53)
mi1.SizeConstraint = Enum.SizeConstraint.RelativeXY
mi1.Text = "Remove lava (Volcano)"
mi1.TextColor3 = Color3.new(0, 0, 0)
mi1.TextScaled = true
mi1.TextSize = 14
mi1.TextStrokeColor3 = Color3.new(0, 0, 0)
mi1.TextStrokeTransparency = 1
mi1.TextTransparency = 0
mi1.TextTruncate = Enum.TextTruncate.None
mi1.TextWrapped = true
mi1.TextXAlignment = Enum.TextXAlignment.Center
mi1.TextYAlignment = Enum.TextYAlignment.Center
mi1.Visible = true
mi1.ZIndex = 1
mi1.Parent = Page2

-- mi1 script
local mi1Script = Instance.new("LocalScript")
mi1Script.Name = "LocalScript"
mi1Script.Source = [[local button = script.Parent

button.MouseButton1Click:Connect(function()
	workspace.Islands["Volcano Island"].LavaParts:Destroy()
end)]]
mi1Script.Parent = mi1

-- Create mi2 button (Check for apple basket)
local mi2 = Instance.new("TextButton")
mi2.Name = "mi2"
mi2.Active = true
mi2.AnchorPoint = Vector2.new(0, 0)
mi2.AutoButtonColor = true
mi2.AutomaticSize = Enum.AutomaticSize.None
mi2.BackgroundColor3 = Color3.new(0.623529434, 0.905882359, 0.898039222)
mi2.BackgroundTransparency = 0
mi2.BorderColor3 = Color3.new(0, 0, 0)
mi2.BorderMode = Enum.BorderMode.Outline
mi2.BorderSizePixel = 3
mi2.ClipsDescendants = false
mi2.Draggable = false
mi2.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
mi2.Interactable = true
mi2.LayoutOrder = 0
mi2.LineHeight = 1
mi2.MaxVisibleGraphemes = -1
mi2.Modal = false
mi2.Position = UDim2.new(0.0695067272, 0, 0.644144118, 0)
mi2.RichText = false
mi2.Rotation = 0
mi2.Selectable = true
mi2.Selected = false
mi2.Size = UDim2.new(0, 130, 0, 53)
mi2.SizeConstraint = Enum.SizeConstraint.RelativeXY
mi2.Text = "Check for apple basket"
mi2.TextColor3 = Color3.new(0, 0, 0)
mi2.TextScaled = true
mi2.TextSize = 14
mi2.TextStrokeColor3 = Color3.new(0, 0, 0)
mi2.TextStrokeTransparency = 1
mi2.TextTransparency = 0
mi2.TextTruncate = Enum.TextTruncate.None
mi2.TextWrapped = true
mi2.TextXAlignment = Enum.TextXAlignment.Center
mi2.TextYAlignment = Enum.TextYAlignment.Center
mi2.Visible = true
mi2.ZIndex = 1
mi2.Parent = Page2

-- mi2 script
local mi2Script = Instance.new("LocalScript")
mi2Script.Name = "LocalScript"
mi2Script.Source = [[local button = script.Parent
button.MouseButton1Click:Connect(function()
	
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()

	local basketContainer = workspace:WaitForChild("Misc"):WaitForChild("GoldenAppleBasket")

	local function getTargetPart()
		for _, obj in pairs(basketContainer:GetChildren()) do
			if obj:IsA("Model") and obj.Name == "Golden Apple Basket" then
				local basketFolder = obj:FindFirstChild("Basket")
				if basketFolder then
					local handles = basketFolder:FindFirstChild("Meshes/Fruit Basket_Handles")
					if handles and handles:IsA("BasePart") then
						return handles
					end
				end
			end
		end
		return nil
	end

	local function teleportToPart(part)
		if not character.PrimaryPart then
			character.PrimaryPart = character:FindFirstChild("HumanoidRootPart")
		end
		if character.PrimaryPart then
			character:SetPrimaryPartCFrame(part.CFrame + Vector3.new(0, 5, 0))
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu8Script.Parent = bu8

-- Create bu9 button (the last button that was cut off in the XML)
-- Based on the pattern, this would likely be another island follower button
local bu9 = Instance.new("TextButton")
bu9.Name = "bu9"
bu9.Active = true
bu9.AnchorPoint = Vector2.new(0, 0)
bu9.AutoButtonColor = true
bu9.AutomaticSize = Enum.AutomaticSize.None
bu9.BackgroundColor3 = Color3.new(0.623529434, 0.905882418, 0.898039281)
bu9.BackgroundTransparency = 0
bu9.BorderColor3 = Color3.new(0, 0, 0)
bu9.BorderMode = Enum.BorderMode.Outline
bu9.BorderSizePixel = 3
bu9.ClipsDescendants = false
bu9.Draggable = false
bu9.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu9.Interactable = true
bu9.LayoutOrder = 0
bu9.LineHeight = 1
bu9.MaxVisibleGraphemes = -1
bu9.Modal = false
bu9.Position = UDim2.new(0.706278026, 0, 0.6, 0) -- Estimated position
bu9.RichText = false
bu9.Rotation = 0
bu9.Selectable = true
bu9.Selected = false
bu9.Size = UDim2.new(0, 87, 0, -35)
bu9.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu9.Text = "Volcano" -- Estimated based on pattern
bu9.TextColor3 = Color3.new(0, 0, 0)
bu9.TextScaled = true
bu9.TextSize = 14
bu9.TextStrokeColor3 = Color3.new(0, 0, 0)
bu9.TextStrokeTransparency = 1
bu9.TextTransparency = 0
bu9.TextTruncate = Enum.TextTruncate.None
bu9.TextWrapped = true
bu9.TextXAlignment = Enum.TextXAlignment.Center
bu9.TextYAlignment = Enum.TextYAlignment.Center
bu9.Visible = true
bu9.ZIndex = 1
bu9.Parent = Page1

-- bu9 script (Volcano follower - estimated based on pattern)
local bu9Script = Instance.new("LocalScript")
bu9Script.Name = "LocalScript"
bu9Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands["Volcano Island"]
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu9Script.Parent = bu9

-- Optional: Add page switching functionality
-- You can add navigation buttons to switch between Page1 and Page2
local function switchToPage1()
	Page1.Visible = true
	Page2.Visible = false
end

local function switchToPage2()
	Page1.Visible = false
	Page2.Visible = true
end

-- Example navigation (you can add actual navigation buttons if needed)
-- switchToPage1() -- Start with Page1 visible

print("TabGUI has been successfully created!")
print("Page1 contains island follower buttons (bu1-bu9)")
print("Page2 contains utility buttons (mi1-mi4)")
print("All scripts have been preserved and will function as intended.")
warn("No PrimaryPart found on character.")
end
end

-- Example: instantly teleport when this script runs
local targetPart = getTargetPart()
if targetPart then
	teleportToPart(targetPart)
else
	warn("Golden Apple Basket or target part not found.")
end


end)]]
mi2Script.Parent = mi2

-- Create mi3 button (Volcanic minerals farm)
local mi3 = Instance.new("TextButton")
mi3.Name = "mi3"
mi3.Active = true
mi3.AnchorPoint = Vector2.new(0, 0)
mi3.AutoButtonColor = true
mi3.AutomaticSize = Enum.AutomaticSize.None
mi3.BackgroundColor3 = Color3.new(0.623529434, 0.905882359, 0.898039222)
mi3.BackgroundTransparency = 0
mi3.BorderColor3 = Color3.new(0, 0, 0)
mi3.BorderMode = Enum.BorderMode.Outline
mi3.BorderSizePixel = 3
mi3.ClipsDescendants = false
mi3.Draggable = false
mi3.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
mi3.Interactable = true
mi3.LayoutOrder = 0
mi3.LineHeight = 1
mi3.MaxVisibleGraphemes = -1
mi3.Modal = false
mi3.Position = UDim2.new(0.603139043, 0, 0.252252251, 0)
mi3.RichText = false
mi3.Rotation = 0
mi3.Selectable = true
mi3.Selected = false
mi3.Size = UDim2.new(0, 130, 0, 53)
mi3.SizeConstraint = Enum.SizeConstraint.RelativeXY
mi3.Text = "Volcanic minerals farm"
mi3.TextColor3 = Color3.new(0, 0, 0)
mi3.TextScaled = true
mi3.TextSize = 14
mi3.TextStrokeColor3 = Color3.new(0, 0, 0)
mi3.TextStrokeTransparency = 1
mi3.TextTransparency = 0
mi3.TextTruncate = Enum.TextTruncate.None
mi3.TextWrapped = true
mi3.TextXAlignment = Enum.TextXAlignment.Center
mi3.TextYAlignment = Enum.TextYAlignment.Center
mi3.Visible = true
mi3.ZIndex = 1
mi3.Parent = Page2

-- mi3 script
local mi3Script = Instance.new("LocalScript")
mi3Script.Name = "LocalScript"
mi3Script.Source = [[-- LocalScript inside a TextButton (StarterGui > ScreenGui > TextButton)

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local button = script.Parent
local volcanoIsland = workspace:WaitForChild("Islands"):WaitForChild("Volcano Island")

local scanning = false
local teleporting = false -- prevents duplicate teleports during delay

local function teleportAbove(rock)
	if not rock:IsA("BasePart") then return end
	local targetPos = rock.Position + Vector3.new(0, rock.Size.Y / 2 + 5, 0)
	humanoidRootPart.CFrame = CFrame.new(targetPos)
end

local function scanForRocks()
	while scanning do
		if not teleporting then
			for _, model in ipairs(volcanoIsland:GetChildren()) do
				if model:IsA("Model") then
					local rock = model:FindFirstChild("Rock")
					if rock and rock:IsA("BasePart") and rock:FindFirstChildWhichIsA("ParticleEmitter") then
						teleporting = true
						button.Text = "Rock Found! Teleporting in 20s..."

						task.delay(20, function()
							if scanning and rock and rock.Parent and rock:IsA("BasePart") then
								teleportAbove(rock)
								button.Text = "Teleported!"
							else
								button.Text = "Rock Gone"
							end
							teleporting = false
						end)

						break -- only handle first found rock
					end
				end
			end
		end
		task.wait(1) -- check every second
	end
end

button.MouseButton1Click:Connect(function()
	if not scanning then
		scanning = true
		button.Text = "Scanning..."
		task.spawn(scanForRocks)
	else
		scanning = false
		teleporting = false
		button.Text = "Scan Stopped"
	end
end)
]]
mi3Script.Parent = mi3

-- Create mi4 button (Training receipts farm)
local mi4 = Instance.new("TextButton")
mi4.Name = "mi4"
mi4.Active = true
mi4.AnchorPoint = Vector2.new(0, 0)
mi4.AutoButtonColor = true
mi4.AutomaticSize = Enum.AutomaticSize.None
mi4.BackgroundColor3 = Color3.new(0.623529434, 0.905882359, 0.898039222)
mi4.BackgroundTransparency = 0
mi4.BorderColor3 = Color3.new(0, 0, 0)
mi4.BorderMode = Enum.BorderMode.Outline
mi4.BorderSizePixel = 3
mi4.ClipsDescendants = false
mi4.Draggable = false
mi4.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
mi4.Interactable = true
mi4.LayoutOrder = 0
mi4.LineHeight = 1
mi4.MaxVisibleGraphemes = -1
mi4.Modal = false
mi4.Position = UDim2.new(0.603139043, 0, 0.644144118, 0)
mi4.RichText = false
mi4.Rotation = 0
mi4.Selectable = true
mi4.Selected = false
mi4.Size = UDim2.new(0, 130, 0, 53)
mi4.SizeConstraint = Enum.SizeConstraint.RelativeXY
mi4.Text = "Training receipts farm"
mi4.TextColor3 = Color3.new(0, 0, 0)
mi4.TextScaled = true
mi4.TextSize = 14
mi4.TextStrokeColor3 = Color3.new(0, 0, 0)
mi4.TextStrokeTransparency = 1
mi4.TextTransparency = 0
mi4.TextTruncate = Enum.TextTruncate.None
mi4.TextWrapped = true
mi4.TextXAlignment = Enum.TextXAlignment.Center
mi4.TextYAlignment = Enum.TextYAlignment.Center
mi4.Visible = true
mi4.ZIndex = 1
mi4.Parent = Page2

-- mi4 script
local mi4Script = Instance.new("LocalScript")
mi4Script.Name = "LocalScript"
mi4Script.Source = [[local button = script.Parent
local player = game.Players.LocalPlayer

local function teleportLoop()
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	local checkpointsFolder = workspace:WaitForChild("Islands")
		:WaitForChild("Training Island")
		:WaitForChild("Outdoor Arena")
		:WaitForChild("DynamicArena")
		:WaitForChild("_LAYOUT")
		:WaitForChild("CheckpointActivity")
		:WaitForChild("Routes")
		:WaitForChild("Checkpoints")

	local checkpointNames = {"1", "2", "3", "4"}

	while true do
		for _, name in ipairs(checkpointNames) do
			local checkpoint = checkpointsFolder:FindFirstChild(name)
			if checkpoint and checkpoint:IsA("BasePart") then
				hrp.CFrame = checkpoint.CFrame
			else
				warn("Checkpoint named "..name.." not found or is not a part")
			end
			wait(2)
		end
	end
end

local teleporting = false

button.MouseButton1Click:Connect(function()
	if not teleporting then
		teleporting = true
		button.Text = "Teleporting..."
		coroutine.wrap(teleportLoop)()
	end
end)
]]
mi4Script.Parent = mi4

-- Create Page1 frame
local Page1 = Instance.new("Frame")
Page1.Name = "Page1"
Page1.Active = false
Page1.AnchorPoint = Vector2.new(0, 0)
Page1.AutomaticSize = Enum.AutomaticSize.None
Page1.BackgroundColor3 = Color3.new(0.309803933, 0.905882359, 0.145098045)
Page1.BackgroundTransparency = 0
Page1.BorderColor3 = Color3.new(0.580392182, 0.964705884, 1)
Page1.BorderMode = Enum.BorderMode.Outline
Page1.BorderSizePixel = 3
Page1.ClipsDescendants = false
Page1.Draggable = false
Page1.Interactable = true
Page1.LayoutOrder = 0
Page1.Position = UDim2.new(-0.002370039, 0, -0.00461440906, 0)
Page1.Rotation = 0
Page1.Selectable = false
Page1.Size = UDim2.new(0, 446, 0, 222)
Page1.SizeConstraint = Enum.SizeConstraint.RelativeXY
Page1.Visible = true -- Page1 is visible by default
Page1.ZIndex = 1
Page1.Parent = Pages

-- Create bu1 button (Mainland)
local bu1 = Instance.new("TextButton")
bu1.Name = "bu1"
bu1.Active = true
bu1.AnchorPoint = Vector2.new(0, 0)
bu1.AutoButtonColor = true
bu1.AutomaticSize = Enum.AutomaticSize.None
bu1.BackgroundColor3 = Color3.new(0.623529434, 0.905882359, 0.898039222)
bu1.BackgroundTransparency = 0
bu1.BorderColor3 = Color3.new(0, 0, 0)
bu1.BorderMode = Enum.BorderMode.Outline
bu1.BorderSizePixel = 3
bu1.ClipsDescendants = false
bu1.Draggable = false
bu1.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu1.Interactable = true
bu1.LayoutOrder = 0
bu1.LineHeight = 1
bu1.MaxVisibleGraphemes = -1
bu1.Modal = false
bu1.Position = UDim2.new(0.0515695065, 0, 0.379641891, 0)
bu1.RichText = false
bu1.Rotation = 0
bu1.Selectable = true
bu1.Selected = false
bu1.Size = UDim2.new(0, 87, 0, -35)
bu1.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu1.Text = "Mainland"
bu1.TextColor3 = Color3.new(0, 0, 0)
bu1.TextScaled = true
bu1.TextSize = 14
bu1.TextStrokeColor3 = Color3.new(0, 0, 0)
bu1.TextStrokeTransparency = 1
bu1.TextTransparency = 0
bu1.TextTruncate = Enum.TextTruncate.None
bu1.TextWrapped = true
bu1.TextXAlignment = Enum.TextXAlignment.Center
bu1.TextYAlignment = Enum.TextYAlignment.Center
bu1.Visible = true
bu1.ZIndex = 1
bu1.Parent = Page1

-- bu1 script (Mainland follower)
local bu1Script = Instance.new("LocalScript")
bu1Script.Name = "LocalScript"
bu1Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands.Mainland
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu1Script.Parent = bu1

-- Create bu2 button (Blizzard)
local bu2 = Instance.new("TextButton")
bu2.Name = "bu2"
bu2.Active = true
bu2.AnchorPoint = Vector2.new(0, 0)
bu2.AutoButtonColor = true
bu2.AutomaticSize = Enum.AutomaticSize.None
bu2.BackgroundColor3 = Color3.new(0.623529434, 0.905882418, 0.898039281)
bu2.BackgroundTransparency = 0
bu2.BorderColor3 = Color3.new(0, 0, 0)
bu2.BorderMode = Enum.BorderMode.Outline
bu2.BorderSizePixel = 3
bu2.ClipsDescendants = false
bu2.Draggable = false
bu2.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu2.Interactable = true
bu2.LayoutOrder = 0
bu2.LineHeight = 1
bu2.MaxVisibleGraphemes = -1
bu2.Modal = false
bu2.Position = UDim2.new(0.0515695065, 0, 0.663425684, 0)
bu2.RichText = false
bu2.Rotation = 0
bu2.Selectable = true
bu2.Selected = false
bu2.Size = UDim2.new(0, 87, 0, -35)
bu2.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu2.Text = "Blizzard"
bu2.TextColor3 = Color3.new(0, 0, 0)
bu2.TextScaled = true
bu2.TextSize = 14
bu2.TextStrokeColor3 = Color3.new(0, 0, 0)
bu2.TextStrokeTransparency = 1
bu2.TextTransparency = 0
bu2.TextTruncate = Enum.TextTruncate.None
bu2.TextWrapped = true
bu2.TextXAlignment = Enum.TextXAlignment.Center
bu2.TextYAlignment = Enum.TextYAlignment.Center
bu2.Visible = true
bu2.ZIndex = 1
bu2.Parent = Page1

-- bu2 script (Blizzard follower)
local bu2Script = Instance.new("LocalScript")
bu2Script.Name = "LocalScript"
bu2Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands["Blizzard Island"]
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu2Script.Parent = bu2

-- Create remaining buttons (bu3-bu9) with similar patterns...
-- I'll continue with the rest of the buttons to complete the conversion

-- Create bu3 button (Forest)
local bu3 = Instance.new("TextButton")
bu3.Name = "bu3"
bu3.Active = true
bu3.AnchorPoint = Vector2.new(0, 0)
bu3.AutoButtonColor = true
bu3.AutomaticSize = Enum.AutomaticSize.None
bu3.BackgroundColor3 = Color3.new(0.623529434, 0.905882418, 0.898039281)
bu3.BackgroundTransparency = 0
bu3.BorderColor3 = Color3.new(0, 0, 0)
bu3.BorderMode = Enum.BorderMode.Outline
bu3.BorderSizePixel = 3
bu3.ClipsDescendants = false
bu3.Draggable = false
bu3.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu3.Interactable = true
bu3.LayoutOrder = 0
bu3.LineHeight = 1
bu3.MaxVisibleGraphemes = -1
bu3.Modal = false
bu3.Position = UDim2.new(0.0515695065, 0, 0.92919153, 0)
bu3.RichText = false
bu3.Rotation = 0
bu3.Selectable = true
bu3.Selected = false
bu3.Size = UDim2.new(0, 87, 0, -35)
bu3.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu3.Text = "Forest"
bu3.TextColor3 = Color3.new(0, 0, 0)
bu3.TextScaled = true
bu3.TextSize = 14
bu3.TextStrokeColor3 = Color3.new(0, 0, 0)
bu3.TextStrokeTransparency = 1
bu3.TextTransparency = 0
bu3.TextTruncate = Enum.TextTruncate.None
bu3.TextWrapped = true
bu3.TextXAlignment = Enum.TextXAlignment.Center
bu3.TextYAlignment = Enum.TextYAlignment.Center
bu3.Visible = true
bu3.ZIndex = 1
bu3.Parent = Page1

-- bu3 script (Forest follower)
local bu3Script = Instance.new("LocalScript")
bu3Script.Name = "LocalScript"
bu3Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands["Forest Island"]
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu3Script.Parent = bu3

-- Create bu4 button (Royal)
local bu4 = Instance.new("TextButton")
bu4.Name = "bu4"
bu4.Active = true
bu4.AnchorPoint = Vector2.new(0, 0)
bu4.AutoButtonColor = true
bu4.AutomaticSize = Enum.AutomaticSize.None
bu4.BackgroundColor3 = Color3.new(0.623529434, 0.905882418, 0.898039281)
bu4.BackgroundTransparency = 0
bu4.BorderColor3 = Color3.new(0, 0, 0)
bu4.BorderMode = Enum.BorderMode.Outline
bu4.BorderSizePixel = 3
bu4.ClipsDescendants = false
bu4.Draggable = false
bu4.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu4.Interactable = true
bu4.LayoutOrder = 0
bu4.LineHeight = 1
bu4.MaxVisibleGraphemes = -1
bu4.Modal = false
bu4.Position = UDim2.new(0.365470856, 0, 0.35261488, 0)
bu4.RichText = false
bu4.Rotation = 0
bu4.Selectable = true
bu4.Selected = false
bu4.Size = UDim2.new(0, 87, 0, -35)
bu4.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu4.Text = "Royal"
bu4.TextColor3 = Color3.new(0, 0, 0)
bu4.TextScaled = true
bu4.TextSize = 14
bu4.TextStrokeColor3 = Color3.new(0, 0, 0)
bu4.TextStrokeTransparency = 1
bu4.TextTransparency = 0
bu4.TextTruncate = Enum.TextTruncate.None
bu4.TextWrapped = true
bu4.TextXAlignment = Enum.TextXAlignment.Center
bu4.TextYAlignment = Enum.TextYAlignment.Center
bu4.Visible = true
bu4.ZIndex = 1
bu4.Parent = Page1

-- bu4 script (Royal follower)
local bu4Script = Instance.new("LocalScript")
bu4Script.Name = "LocalScript"
bu4Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands["Royal Island"]
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu4Script.Parent = bu4

-- Create bu5 button (Desert)
local bu5 = Instance.new("TextButton")
bu5.Name = "bu5"
bu5.Active = true
bu5.AnchorPoint = Vector2.new(0, 0)
bu5.AutoButtonColor = true
bu5.AutomaticSize = Enum.AutomaticSize.None
bu5.BackgroundColor3 = Color3.new(0.623529434, 0.905882418, 0.898039281)
bu5.BackgroundTransparency = 0
bu5.BorderColor3 = Color3.new(0, 0, 0)
bu5.BorderMode = Enum.BorderMode.Outline
bu5.BorderSizePixel = 3
bu5.ClipsDescendants = false
bu5.Draggable = false
bu5.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu5.Interactable = true
bu5.LayoutOrder = 0
bu5.LineHeight = 1
bu5.MaxVisibleGraphemes = -1
bu5.Modal = false
bu5.Position = UDim2.new(0.365470856, 0, 0.537299573, 0)
bu5.RichText = false
bu5.Rotation = 0
bu5.Selectable = true
bu5.Selected = false
bu5.Size = UDim2.new(0, 87, 0, -35)
bu5.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu5.Text = "Desert"
bu5.TextColor3 = Color3.new(0, 0, 0)
bu5.TextScaled = true
bu5.TextSize = 14
bu5.TextStrokeColor3 = Color3.new(0, 0, 0)
bu5.TextStrokeTransparency = 1
bu5.TextTransparency = 0
bu5.TextTruncate = Enum.TextTruncate.None
bu5.TextWrapped = true
bu5.TextXAlignment = Enum.TextXAlignment.Center
bu5.TextYAlignment = Enum.TextYAlignment.Center
bu5.Visible = true
bu5.ZIndex = 1
bu5.Parent = Page1

-- bu5 script (Desert follower)
local bu5Script = Instance.new("LocalScript")
bu5Script.Name = "LocalScript"
bu5Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands["Desert Island"]
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu5Script.Parent = bu5

-- Create bu6 button (Glacier)
local bu6 = Instance.new("TextButton")
bu6.Name = "bu6"
bu6.Active = true
bu6.AnchorPoint = Vector2.new(0, 0)
bu6.AutoButtonColor = true
bu6.AutomaticSize = Enum.AutomaticSize.None
bu6.BackgroundColor3 = Color3.new(0.623529434, 0.905882418, 0.898039281)
bu6.BackgroundTransparency = 0
bu6.BorderColor3 = Color3.new(0, 0, 0)
bu6.BorderMode = Enum.BorderMode.Outline
bu6.BorderSizePixel = 3
bu6.ClipsDescendants = false
bu6.Draggable = false
bu6.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu6.Interactable = true
bu6.LayoutOrder = 0
bu6.LineHeight = 1
bu6.MaxVisibleGraphemes = -1
bu6.Modal = false
bu6.Position = UDim2.new(0.365470856, 0, 0.740002334, 0)
bu6.RichText = false
bu6.Rotation = 0
bu6.Selectable = true
bu6.Selected = false
bu6.Size = UDim2.new(0, 87, 0, -35)
bu6.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu6.Text = "Glacier"
bu6.TextColor3 = Color3.new(0, 0, 0)
bu6.TextScaled = true
bu6.TextSize = 14
bu6.TextStrokeColor3 = Color3.new(0, 0, 0)
bu6.TextStrokeTransparency = 1
bu6.TextTransparency = 0
bu6.TextTruncate = Enum.TextTruncate.None
bu6.TextWrapped = true
bu6.TextXAlignment = Enum.TextXAlignment.Center
bu6.TextYAlignment = Enum.TextYAlignment.Center
bu6.Visible = true
bu6.ZIndex = 1
bu6.Parent = Page1

-- bu6 script (Glacier follower)
local bu6Script = Instance.new("LocalScript")
bu6Script.Name = "LocalScript"
bu6Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands["Glacier Island"]
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu6Script.Parent = bu6

-- Create bu7 button (Mountain)
local bu7 = Instance.new("TextButton")
bu7.Name = "bu7"
bu7.Active = true
bu7.AnchorPoint = Vector2.new(0, 0)
bu7.AutoButtonColor = true
bu7.AutomaticSize = Enum.AutomaticSize.None
bu7.BackgroundColor3 = Color3.new(0.623529434, 0.905882418, 0.898039281)
bu7.BackgroundTransparency = 0
bu7.BorderColor3 = Color3.new(0, 0, 0)
bu7.BorderMode = Enum.BorderMode.Outline
bu7.BorderSizePixel = 3
bu7.ClipsDescendants = false
bu7.Draggable = false
bu7.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu7.Interactable = true
bu7.LayoutOrder = 0
bu7.LineHeight = 1
bu7.MaxVisibleGraphemes = -1
bu7.Modal = false
bu7.Position = UDim2.new(0.365470856, 0, 0.956218541, 0)
bu7.RichText = false
bu7.Rotation = 0
bu7.Selectable = true
bu7.Selected = false
bu7.Size = UDim2.new(0, 87, 0, -35)
bu7.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu7.Text = "Mountain"
bu7.TextColor3 = Color3.new(0, 0, 0)
bu7.TextScaled = true
bu7.TextSize = 14
bu7.TextStrokeColor3 = Color3.new(0, 0, 0)
bu7.TextStrokeTransparency = 1
bu7.TextTransparency = 0
bu7.TextTruncate = Enum.TextTruncate.None
bu7.TextWrapped = true
bu7.TextXAlignment = Enum.TextXAlignment.Center
bu7.TextYAlignment = Enum.TextYAlignment.Center
bu7.Visible = true
bu7.ZIndex = 1
bu7.Parent = Page1

-- bu7 script (Mountain follower)
local bu7Script = Instance.new("LocalScript")
bu7Script.Name = "LocalScript"
bu7Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands["Mountain Island"]
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
			warn("Invalid folder:", folder)
		end
	end
end)
]]
bu7Script.Parent = bu7

-- Create bu8 button (Jungle)
local bu8 = Instance.new("TextButton")
bu8.Name = "bu8"
bu8.Active = true
bu8.AnchorPoint = Vector2.new(0, 0)
bu8.AutoButtonColor = true
bu8.AutomaticSize = Enum.AutomaticSize.None
bu8.BackgroundColor3 = Color3.new(0.623529434, 0.905882418, 0.898039281)
bu8.BackgroundTransparency = 0
bu8.BorderColor3 = Color3.new(0, 0, 0)
bu8.BorderMode = Enum.BorderMode.Outline
bu8.BorderSizePixel = 3
bu8.ClipsDescendants = false
bu8.Draggable = false
bu8.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
bu8.Interactable = true
bu8.LayoutOrder = 0
bu8.LineHeight = 1
bu8.MaxVisibleGraphemes = -1
bu8.Modal = false
bu8.Position = UDim2.new(0.706278026, 0, 0.375137478, 0)
bu8.RichText = false
bu8.Rotation = 0
bu8.Selectable = true
bu8.Selected = false
bu8.Size = UDim2.new(0, 87, 0, -35)
bu8.SizeConstraint = Enum.SizeConstraint.RelativeXY
bu8.Text = "Jungle"
bu8.TextColor3 = Color3.new(0, 0, 0)
bu8.TextScaled = true
bu8.TextSize = 14
bu8.TextStrokeColor3 = Color3.new(0, 0, 0)
bu8.TextStrokeTransparency = 1
bu8.TextTransparency = 0
bu8.TextTruncate = Enum.TextTruncate.None
bu8.TextWrapped = true
bu8.TextXAlignment = Enum.TextXAlignment.Center
bu8.TextYAlignment = Enum.TextYAlignment.Center
bu8.Visible = true
bu8.ZIndex = 1
bu8.Parent = Page1

-- bu8 script (Jungle follower)
local bu8Script = Instance.new("LocalScript")
bu8Script.Name = "LocalScript"
bu8Script.Source = [[local button = script.Parent

local currentTask

local function followLoopFrom(folder)
	if currentTask then
		task.cancel(currentTask)
	end

	local players = game:GetService("Players")
	local lp = players.LocalPlayer
	local char = lp.Character or lp.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	local function getValidTargets()
		local targets = {}
		for _, model in ipairs(folder:GetChildren()) do
			if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model:FindFirstChild("maneMesh") then
				table.insert(targets, model)
			end
		end
		return targets
	end

	currentTask = task.spawn(function()
		local currentTarget = nil
		local lastSwitch = 0

		while true do
			local now = tick()

			-- Switch target every 15 seconds or if lost
			if not currentTarget or not currentTarget.Parent or now - lastSwitch >= 15 then
				local targets = getValidTargets()
				if #targets > 0 then
					local newTarget
					repeat
						newTarget = targets[math.random(1, #targets)]
					until newTarget ~= currentTarget or #targets == 1

					currentTarget = newTarget
					lastSwitch = now

					local targetHRP = currentTarget:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -5)
					end
				end
			end

			-- Follow current target
			if currentTarget and currentTarget:FindFirstChild("HumanoidRootPart") then
				local targetHRP = currentTarget.HumanoidRootPart
				local distance = (hrp.Position - targetHRP.Position).Magnitude

				if distance > 6 then
					humanoid:MoveTo(targetHRP.Position + Vector3.new(0, 0, -4))
				end

				if distance > 30 then
					hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -4)
				end
			end

			task.wait(0.2)
		end
	end)
end

-- âœ… Folder References
local folders = {
	workspace.Islands["Jungle Island"]
}

-- When the button is clicked, start following from each folder
button.MouseButton1Click:Connect(function()
	for _, folder in ipairs(folders) do
		if folder and folder:IsA("Folder") then
			followLoopFrom(folder)
		else
