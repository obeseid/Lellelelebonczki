-- LocalScript: Patch ModifyAnimalSpawnData for testing
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Require the module
local ModifyAnimalSpawnData = require(
    ReplicatedStorage.References.Utilities.Server.Functions.ModifyAnimalSpawnData
)

-- Safety check
if not ModifyAnimalSpawnData.ApplySpawnData then
    warn("[PATCH] ApplySpawnData function not found in module!")
    return
end

-- Wrap ApplySpawnData to patch weights at runtime
local originalFunc = ModifyAnimalSpawnData.ApplySpawnData

ModifyAnimalSpawnData.ApplySpawnData = function(animal, region, ...)
    -- Call the original function to get the spawn table
    local spawnData = originalFunc(animal, region, ...)

    -- Patch the Blizzard Island weights if applicable
    if region == "Blizzard Island" and type(spawnData) == "table" then
        local patched = false
        for _, entry in pairs(spawnData) do
            if entry.value == "iceyPink" then
                entry.weight = 999999
                patched = true
            end
        end
        if patched then
            print("[PATCH] Boosted iceyPink weight for player:")
        else
            print("[PATCH] No iceyPink entry found to patch!")
        end
    end

    return spawnData
end

print("[PATCH] ModifyAnimalSpawnData successfully patched for player:")
